#quartz.receipt.job.jobClass = com.queue.job.SendReceiptJob
#quartz.receipt.job.name = receiptJob
#quartz.receipt.job.group = JobGroup
#quartz.receipt.trigger.startDelay = 1000
#quartz.receipt.trigger.repeatInterval = 10000
quartz.receipt.contrigger.repeatInterval = 0 30 0 * * ?

#quartz.orders.job.jobClass = com.queue.job.SendOrdersJob
#quartz.orders.job.name = ordersJob
#quartz.orders.job.group = JobGroup
#quartz.orders.trigger.startDelay = 1000
#quartz.orders.trigger.repeatInterval = 10000
quartz.boxsort.contrigger.repeatInterval = 0/10 * * * * ?

#quartz.pbtransfer.job.jobClass = com.queue.job.SendPbTransferJob
#quartz.pbtransfer.job.name = ordersJob
#quartz.pbtransfer.job.group = JobGroup
#quartz.pbtransfer.trigger.startDelay = 1000
#quartz.pbtransfer.trigger.repeatInterval = 10000
quartz.pbtransfer.contrigger.repeatInterval = 0/10 * * * * ?

#quartz.ordercancel.job.jobClass = com.queue.job.SendOrderCancelJob
#quartz.ordercancel.job.name = orderCancelJob
#quartz.ordercancel.job.group = JobGroup
#quartz.ordercancel.trigger.startDelay = 1000
#quartz.ordercancel.trigger.repeatInterval = 10000
quartz.ordercancel.contrigger.repeatInterval = 0/10 * * * * ?

#quartz.asncancel.job.jobClass = com.queue.job.SendAsnCancelJob
#quartz.asncancel.job.name = asnCancelJob
#quartz.asncancel.job.group = JobGroup
#quartz.asncancel.trigger.startDelay = 100
#quartz.asncancel.trigger.repeatInterval = 1000
quartz.asncancel.contrigger.repeatInterval = 0/10 * * * * ?

#quartz.pbtransfercancel.job.jobClass = com.queue.job.SendPbTransferCancelJob
#quartz.pbtransfercancel.job.name = asnCancelJob
#quartz.pbtransfercancel.job.group = JobGroup
#quartz.pbtransfercancel.trigger.startDelay = 1000
#quartz.pbtransfercancel.trigger.repeatInterval = 10000
quartz.pbtransfercancel.contrigger.repeatInterval = 0/10 * * * * ?


quartz.receiptDownload.contrigger.repeatInterval = 0/10 * * * * ?

quartz.receiptUpload.contrigger.repeatInterval = 0/20 * * * * ?

quartz.receiptCountJob.contrigger.repeatInterval = 0/30 * * * * ?

quartz.receiptTaskJob.contrigger.repeatInterval = 0/33 * * * * ?


# 配置主调度器属性  
org.quartz.scheduler.instanceName = DefaultQuartzScheduler  
org.quartz.scheduler.rmi.export = false  
org.quartz.scheduler.rmi.proxy = false  
org.quartz.scheduler.wrapJobExecutionInUserTransaction = false  
# 配置线程池  
# Quartz线程池的实现类
orgorg.quartz.threadPool.class = org.quartz.simpl.SimpleThreadPool
# 线程池的线程数量  
org.quartz.threadPool.threadCount = 10
# 线程池里线程的优先级  
org.quartz.threadPool.threadPriority = 5
org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread = true  
# 配置作业存储  
org.quartz.jobStore.misfireThreshold = 60000  
  
orgorg.quartz.jobStore.class = org.quartz.simpl.RAMJobStore  
  
#orgorg.quartz.jobStore.class = org.quartz.impl.jdbcjobstore.JobStoreTX  
#orgorg.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.HSQLDBDelegate  
#orgorg.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.StdJDBCDelegate  
#org.quartz.jobStore.useProperties = true  
#org.quartz.jobStore.tablePrefix = QRTZ_    
#org.quartz.jobStore.isClustered = false    
#org.quartz.jobStore.maxMisfiresToHandleAtATime=1